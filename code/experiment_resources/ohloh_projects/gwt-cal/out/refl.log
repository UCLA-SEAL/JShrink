Array.newInstance;boolean[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;byte[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;char[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;double[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;float[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;int[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;java.lang.String[];java.util.AbstractCollection.toArray;179;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.annotation.Annotation[];java.util.AbstractCollection.toArray;179;;
Array.newInstance;java.lang.reflect.Method[];java.util.Arrays.copyOf;3212;;
Array.newInstance;long[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Array.newInstance;org.apache.maven.surefire.shade.org.codehaus.plexus.util.xml.Xpp3Dom[];java.util.Arrays.copyOf;3212;;
Array.newInstance;short[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1679;;
Class.forName;java.io.File;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.io.File[];org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.lang.Boolean;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.lang.ClassLoader;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy0.<clinit>;;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy1.<clinit>;;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy2.<clinit>;;;
Class.forName;java.lang.String;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.lang.annotation.Retention;com.sun.proxy.$Proxy0.<clinit>;;;
Class.forName;java.lang.annotation.Retention;java.lang.reflect.Proxy$ProxyClassFactory.apply;577;;
Class.forName;java.lang.annotation.Retention;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;java.lang.annotation.RetentionPolicy;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;java.lang.annotation.Target;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;java.util.ArrayList;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;java.util.List;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;org.apache.maven.surefire.Surefire;org.apache.maven.surefire.booter.SurefireBooter.class$;125;;
Class.forName;org.junit.Before;com.sun.proxy.$Proxy2.<clinit>;;;
Class.forName;org.junit.Before;java.lang.reflect.Proxy$ProxyClassFactory.apply;577;;
Class.forName;org.junit.Before;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;org.junit.Test$None;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;org.junit.Test;com.sun.proxy.$Proxy1.<clinit>;;;
Class.forName;org.junit.Test;java.lang.reflect.Proxy$ProxyClassFactory.apply;577;;
Class.forName;org.junit.Test;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;114;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1187;;
Class.getDeclaredField;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.invoke.MethodHandle.<clinit>;1451;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.util.concurrent.atomic.AtomicMarkableReference.objectFieldOffset;204;isAccessible=false;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.AppointmentTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.DateUtilsTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredFields;java.lang.Object;org.junit.runners.model.TestClass.<init>;44;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.AppointmentTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.DateUtilsTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;java.lang.Object;org.junit.runners.model.TestClass.<init>;41;;
Class.getDeclaredMethods;java.lang.annotation.Retention;sun.reflect.annotation.AnnotationType$1.run;112;;
Class.getDeclaredMethods;org.junit.Before;sun.reflect.annotation.AnnotationType$1.run;112;;
Class.getDeclaredMethods;org.junit.Test;sun.reflect.annotation.AnnotationType$1.run;112;;
Class.getMethod;<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>;org.apache.maven.surefire.booter.SurefireBooter.<clinit>;124;isAccessible=false;
Class.getMethod;<java.lang.Object: boolean equals(java.lang.Object)>;com.sun.proxy.$Proxy0.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: boolean equals(java.lang.Object)>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: boolean equals(java.lang.Object)>;com.sun.proxy.$Proxy2.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: boolean equals(java.lang.Object)>;sun.misc.ProxyGenerator.<clinit>;376;isAccessible=false;
Class.getMethod;<java.lang.Object: int hashCode()>;com.sun.proxy.$Proxy0.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: int hashCode()>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: int hashCode()>;com.sun.proxy.$Proxy2.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: int hashCode()>;sun.misc.ProxyGenerator.<clinit>;374;isAccessible=false;
Class.getMethod;<java.lang.Object: java.lang.String toString()>;com.sun.proxy.$Proxy0.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: java.lang.String toString()>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: java.lang.String toString()>;com.sun.proxy.$Proxy2.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.Object: java.lang.String toString()>;sun.misc.ProxyGenerator.<clinit>;377;isAccessible=false;
Class.getMethod;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;com.sun.proxy.$Proxy0.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;com.sun.proxy.$Proxy2.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;com.sun.proxy.$Proxy0.<clinit>;;isAccessible=false;
Class.getMethod;<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=false;
Class.getMethod;<org.apache.maven.surefire.Surefire: int run(java.util.List,java.util.List,java.lang.ClassLoader,java.lang.ClassLoader,java.lang.Boolean)>;org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess;339;isAccessible=false;
Class.getMethod;<org.apache.maven.surefire.booter.SurefireBooter: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;544;isAccessible=false;
Class.getMethod;<org.junit.Test: java.lang.Class expected()>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethod;<org.junit.Test: long timeout()>;com.sun.proxy.$Proxy1.<clinit>;;isAccessible=false;
Class.getMethods;java.lang.annotation.Retention;sun.misc.ProxyGenerator.generateClassFile;451;;
Class.getMethods;org.junit.Before;sun.misc.ProxyGenerator.generateClassFile;451;;
Class.getMethods;org.junit.Test;sun.misc.ProxyGenerator.generateClassFile;451;;
Class.newInstance;org.apache.maven.surefire.Surefire;org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess;337;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1196;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor2;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor3;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.text.resources.en.FormatData_en;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.CalendarData;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.TimeZoneNames;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.en.CalendarData_en;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.en.TimeZoneNames_en;java.util.ResourceBundle$Control.newBundle;2662;;
Constructor.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void <init>()>;sun.reflect.NativeConstructorAccessorImpl.newInstance;58;isAccessible=false;
Constructor.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void <init>()>;sun.reflect.NativeConstructorAccessorImpl.newInstance;58;isAccessible=false;
Constructor.getModifiers;<com.sun.proxy.$Proxy1: void <init>(java.lang.reflect.InvocationHandler)>;sun.reflect.NativeConstructorAccessorImpl.newInstance;58;isAccessible=false;
Constructor.getModifiers;<org.apache.maven.surefire.Surefire: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor3: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedMethodAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.TimeZoneNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.TimeZoneNames_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void <init>()>;org.junit.runners.BlockJUnit4ClassRunner.createTest;187;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy0: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newProxyInstance;739;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy1: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newProxyInstance;739;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy2: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newProxyInstance;739;isAccessible=false;
Constructor.newInstance;<org.apache.maven.surefire.Surefire: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.maven.surefire.junit4.JUnit4DirectoryTestSuite: void <init>(java.io.File,java.util.ArrayList,java.util.ArrayList)>;org.apache.maven.surefire.Surefire.instantiateObject;278;isAccessible=false;
Constructor.newInstance;<org.apache.maven.surefire.report.BriefFileReporter: void <init>(java.io.File,java.lang.Boolean)>;org.apache.maven.surefire.Surefire.instantiateObject;278;isAccessible=false;
Constructor.newInstance;<org.apache.maven.surefire.report.ForkingConsoleReporter: void <init>(java.lang.Boolean)>;org.apache.maven.surefire.Surefire.instantiateObject;278;isAccessible=false;
Constructor.newInstance;<org.apache.maven.surefire.report.XMLReporter: void <init>(java.io.File,java.lang.Boolean)>;org.apache.maven.surefire.Surefire.instantiateObject;278;isAccessible=false;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor3: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.TimeZoneNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.TimeZoneNames_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: com.bradrydzewski.gwt.calendar.client.AppointmentManager manager>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescription appointmentDescription>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManager stackManager>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescription dayDescription>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescription weekDescription>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescription[] weekDescriptions>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: java.lang.String[] YEAR_2010_DATES>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescription multidayDescription>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescription weekDescription>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: java.util.Date DEC_5_2009>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: java.util.Date NOV_1_2009>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: java.text.DateFormat dateFormatter>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: java.util.Date rangeEnd>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: java.util.Date rangeStart>;java.lang.reflect.Field.declaredAnnotations;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.lang.Class.searchFields;;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;sun.reflect.NativeMethodAccessorImpl.invoke;50;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;sun.reflect.NativeMethodAccessorImpl.invoke;53;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void assertStartEndDay(int,int,com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescription)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void assertStartEndDay(int,int,com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescription)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assertCurrentlyAvailableStackingOrder(int,int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assertCurrentlyAvailableStackingOrder(int,int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment(java.lang.String,java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment(java.lang.String,java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment(java.lang.String,java.lang.String,java.lang.String,boolean)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: com.bradrydzewski.gwt.calendar.client.Appointment appointment(java.lang.String,java.lang.String,java.lang.String,boolean)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void assertDayAppointmentTitle(java.lang.String,int,int,int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void assertDayAppointmentTitle(java.lang.String,int,int,int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void assertTopAppointmentTitle(java.lang.String,int,int,int,int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void assertTopAppointmentTitle(java.lang.String,int,int,int,int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void assertFirstDateInMonthView(java.lang.String[],int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void assertFirstDateInMonthView(java.lang.String[],int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void assertMonthRequiredRows(int,java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void assertMonthRequiredRows(int,java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addMultiDayAppointment(java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addMultiDayAppointment(java.lang.String,java.lang.String)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertMultiDayAppointmentsNotEmpty(int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertMultiDayAppointmentsNotEmpty(int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertStackOrderForDay(int,int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertStackOrderForDay(int,int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertThereAreAppointmentsOn(int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void assertThereAreAppointmentsOn(int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;86;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: boolean equals(java.lang.Object)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: boolean equals(java.lang.Object)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: int hashCode()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: int hashCode()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.Class getClass()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.Class getClass()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.Object clone()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.Object clone()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.String toString()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: java.lang.String toString()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void finalize()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void finalize()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void notify()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void notify()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void notifyAll()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void notifyAll()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void registerNatives()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void registerNatives()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait()>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait()>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait(long)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait(long)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait(long,int)>;java.lang.reflect.Executable.declaredAnnotations;602;isAccessible=false;
Method.getDeclaringClass;<java.lang.Object: void wait(long,int)>;java.lang.reflect.Executable.declaredAnnotations;603;isAccessible=false;
Method.getDeclaringClass;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<java.lang.annotation.Annotation: int hashCode()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<java.lang.annotation.Annotation: java.lang.String toString()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<org.junit.Test: java.lang.Class expected()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<org.junit.Test: java.lang.Class expected()>;java.lang.reflect.Method.getDefaultValue;;isAccessible=false;
Method.getDeclaringClass;<org.junit.Test: long timeout()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getDeclaringClass;<org.junit.Test: long timeout()>;java.lang.reflect.Method.getDefaultValue;;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;sun.reflect.NativeMethodAccessorImpl.invoke;58;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;82;isAccessible=false;
Method.getModifiers;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;org.junit.runners.model.FrameworkMethod.validatePublicVoid;88;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;java.lang.Class$MethodArray.addInterfaceMethods;2781;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: int hashCode()>;java.lang.Class$MethodArray.addInterfaceMethods;2781;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: int hashCode()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.Class$MethodArray.addInterfaceMethods;2781;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.Class.privateGetMethodRecursive;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: java.lang.String toString()>;java.lang.Class$MethodArray.addInterfaceMethods;2781;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Annotation: java.lang.String toString()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;java.lang.reflect.Executable.isSynthetic;516;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;sun.reflect.annotation.AnnotationType.<init>;121;isAccessible=false;
Method.getModifiers;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;sun.reflect.annotation.AnnotationType.<init>;122;isAccessible=false;
Method.getModifiers;<org.apache.maven.surefire.booter.SurefireBooter: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;557;isAccessible=false;
Method.getModifiers;<org.junit.Test: java.lang.Class expected()>;java.lang.reflect.Executable.isSynthetic;516;isAccessible=false;
Method.getModifiers;<org.junit.Test: java.lang.Class expected()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<org.junit.Test: java.lang.Class expected()>;sun.reflect.annotation.AnnotationType.<init>;121;isAccessible=false;
Method.getModifiers;<org.junit.Test: java.lang.Class expected()>;sun.reflect.annotation.AnnotationType.<init>;122;isAccessible=false;
Method.getModifiers;<org.junit.Test: long timeout()>;java.lang.reflect.Executable.isSynthetic;516;isAccessible=false;
Method.getModifiers;<org.junit.Test: long timeout()>;java.lang.reflect.Method.isDefault;;isAccessible=false;
Method.getModifiers;<org.junit.Test: long timeout()>;sun.reflect.annotation.AnnotationType.<init>;121;isAccessible=false;
Method.getModifiers;<org.junit.Test: long timeout()>;sun.reflect.annotation.AnnotationType.<init>;122;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;sun.reflect.NativeMethodAccessorImpl.invoke;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: java.util.Date date(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;org.junit.runners.model.FrameworkMethod.getName;54;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.lang.ClassLoader getParent()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: void clearAssertionStatus()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: boolean equals(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: boolean equals(java.lang.Object)>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.Object: int hashCode()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: int hashCode()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.Object: java.lang.Class getClass()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: java.lang.String toString()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.Object: void notify()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void notifyAll()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: boolean equals(java.lang.Object)>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: int hashCode()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: int hashCode()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: int hashCode()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.Class$MethodArray.matchesNameAndDescriptor;2819;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.Class annotationType()>;sun.reflect.annotation.AnnotationInvocationHandler.invoke;58;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.String toString()>;java.lang.reflect.Method.equals;;isAccessible=false;
Method.getName;<java.lang.annotation.Annotation: java.lang.String toString()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;sun.reflect.annotation.AnnotationInvocationHandler.invoke;58;isAccessible=false;
Method.getName;<java.lang.annotation.Retention: java.lang.annotation.RetentionPolicy value()>;sun.reflect.annotation.AnnotationType.<init>;127;isAccessible=false;
Method.getName;<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy valueOf(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy[] values()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: boolean run(java.util.List,java.lang.Object[],java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: boolean run(java.util.List,java.lang.Object[],java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader,java.util.Properties)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: boolean run(java.util.List,java.util.List,java.lang.ClassLoader,java.lang.ClassLoader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: int run(java.util.List,java.lang.Object[],java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader,java.lang.Boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: int run(java.util.List,java.lang.Object[],java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader,java.util.Properties,java.lang.Boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: int run(java.util.List,java.util.List,java.lang.ClassLoader,java.lang.ClassLoader,java.lang.Boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: java.lang.Object instantiateObject(java.lang.String,java.lang.Object[],java.lang.ClassLoader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.Surefire: java.lang.String getResourceString(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: boolean isForking()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: int run()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: java.io.File getReportsDirectory()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addClassPathUrl(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addReport(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addReport(java.lang.String,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addSurefireBootClassPathUrl(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addSurefireClassPathUrl(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void addTestSuite(java.lang.String,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setChildDelegation(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setEnableAssertions(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setFailIfNoTests(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setForkConfiguration(org.apache.maven.surefire.booter.ForkConfiguration)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setForkedProcessTimeoutInSeconds(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setRedirectTestOutputToFile(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.maven.surefire.booter.SurefireBooter: void setReportsDirectory(java.io.File)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.junit.Test: java.lang.Class expected()>;java.lang.Class$MethodArray.matchesNameAndDescriptor;2819;isAccessible=false;
Method.getName;<org.junit.Test: java.lang.Class expected()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.junit.Test: java.lang.Class expected()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<org.junit.Test: java.lang.Class expected()>;sun.reflect.annotation.AnnotationInvocationHandler.invoke;58;isAccessible=false;
Method.getName;<org.junit.Test: java.lang.Class expected()>;sun.reflect.annotation.AnnotationType.<init>;127;isAccessible=false;
Method.getName;<org.junit.Test: long timeout()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.junit.Test: long timeout()>;sun.misc.ProxyGenerator.addProxyMethod;587;isAccessible=false;
Method.getName;<org.junit.Test: long timeout()>;sun.reflect.annotation.AnnotationInvocationHandler.invoke;58;isAccessible=false;
Method.getName;<org.junit.Test: long timeout()>;sun.reflect.annotation.AnnotationType.<init>;127;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentNullAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void addAppointmentsNullList()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void clearAppointments()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void listNotNullButEmpty()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void prepareAppointmentsAndManager()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentNullParameter()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentParameterNotInCollection()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentSameAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeAppointmentThatHappensToBeTheOneSelected()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void removeCurrentlySelectedAppointmentNoAppointmentSelected()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentCurrentIsTheLast()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectNextAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentCurrentIsTheFirst()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void selectPreviousAppointmentSelectedIsNull()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointment()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentNull()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentManagerTest: void setSelectedAppointmentWontSelectIfAppointmentNotPresent()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.AppointmentTest: void cloneClonesStartAndDateDates_notAttendeesThough()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunApr_20100425_MonMay_20100503()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonJan_20110103()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_SunDec_20101226_MonMay_20110103()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_bothSameDate_DifferentTimes()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_consecutive_but_swapped()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithHours()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_endDateWithNoHours()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startCloseToEOD_endRightAfterBeginningOfDay()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void differenceInDays_startOnFirstInstant_endOnLastInstant_differentDays()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfFeb2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void firstOfTheMonth_LastOfJan2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossMonths()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_AcrossYears()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void moveOneDayForward_WithinSameMonth()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateReturnsSemanticallyEqualObject()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void newDateSourceIsNull()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testAreOnTheSameMonth()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthChangeYear()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.DateUtilsTest: void testFirstOfNextMonthFromFebOnLeapYear()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_DifferentStartAndEndDay()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void spansMoreThanADay_SameStartAndEndDay()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitSingleDayDescription()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentLayoutDescriptionTest: void splitTwoDayDescription()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignFullWeekDescriptions()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignPartiallyOverlappingDescriptionsResultsInTwoLayers()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignSevenDescriptionsPerLayer()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void assignTwoDescriptionsInLayer()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void buildBrickWall()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAboveMaxLayerGetsSplit()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_LimitNotSet()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_NoOverflown()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayAppointmentsOverLimitOn_OneOverflown()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void multidayLandsPike()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndex()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void nextLowestLayerIndexInterspersedWithMultidayAppointments()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void oneInLayerOneAndTwoInLayerTwo()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.AppointmentStackingManagerTest: void singleDaysSlipThroughMultidays()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void initDayAndWeek()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.DayLayoutDescriptionTest: void weekMultidaysNotOverlappintDontAffectDayStackOrder()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentFromPriorMonthInFirstWeekOfNextMonth_issue66()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void appointmentInNextMonthVisible_issue60()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void layoutTwoHourAppointment_issue28()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multiWeekAppointmentInFinalWeek_issue40()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void multipleMonthSpanningAppointmentNotDisplayedInFirstDaysOfNextMonth_issue83()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthLayoutDescriptionTest: void priorMonthAppointmentExcluded_issue40()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void february2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void firstDateShownInAMonthView_CreatesClone()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void january2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Friday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Monday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Saturday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Sunday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Thursday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Tuesday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void modifyFirstDayOfWeek_Wednesday_2010()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires5Rows()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MonthViewDateUtilsTest: void testMonthViewRequires6Rows_May09AndAug09()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionOverlap()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingEnclosingTotally()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void singleDayDescriptionWithOverlappingTwoDays()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionCompleteOverlap()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnLeft()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.MultiDayLayoutDescriptionTest: void twoDayDescriptionOtherOverlappingOnRight()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addOneMultiDaySingleWeek()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekAndNoOverlapBetweenThem()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void addTwoMultiDaySingleWeekWithOverlap()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDay()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void areThereAppointmentsOnDayWeekIgnoresExactWeek()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.monthview.WeekLayoutDescriptionTest: void init()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void init()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmenEqualsRange()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentContained()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOutOfRange()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<com.bradrydzewski.gwt.calendar.client.util.AppointmentUtilTest: void testRangeContains_AppointmentOverlapsOnLeft()>;org.junit.runners.model.FrameworkMethod$1.runReflectiveCall;45;isAccessible=false;
Method.invoke;<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>;org.apache.maven.surefire.booter.SurefireBooter.createClassLoader;749;isAccessible=false;
Method.invoke;<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>;org.apache.maven.surefire.booter.SurefireBooter.createClassLoader;751;isAccessible=false;
Method.invoke;<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
Method.invoke;<org.apache.maven.surefire.Surefire: int run(java.util.List,java.util.List,java.lang.ClassLoader,java.lang.ClassLoader,java.lang.Boolean)>;org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess;345;isAccessible=false;
